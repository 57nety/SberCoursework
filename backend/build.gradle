plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_15
    targetCompatibility = JavaVersion.VERSION_15
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation("org.springframework.boot:spring-boot-starter")
    implementation('org.springframework.kafka:spring-kafka')

    implementation('org.postgresql:postgresql:42.6.0')
    implementation('org.liquibase:liquibase-core')

    testImplementation('org.testcontainers:testcontainers:1.19.2')
    testImplementation('org.testcontainers:postgresql:1.19.2')
    testImplementation('org.testcontainers:junit-jupiter:1.19.2')

    testImplementation("org.mockito:mockito-core:5.7.0")
    implementation("net.bytebuddy:byte-buddy:1.14.9")

    compileOnly('org.projectlombok:lombok:1.18.28')
    annotationProcessor("org.projectlombok:lombok:1.18.28")

    implementation('co.elastic.logging:logback-ecs-encoder:1.5.0')
    implementation('org.apache.commons:commons-lang3:3.12.0')
}

bootJar {
    archiveFileName = 'backend-1.0-SNAPSHOT.jar'
    mainClassName = 'ru.template.example.Application' // Имя класса с основным методом main
}

test {
    include('ru/template/example/**')
    useJUnitPlatform()
}
